services:

  coordinator:
    image: nebulastream/nes-executable-image:latest
    entrypoint: "nesCoordinator --configPath=/tutorial/coordinator.yaml"
    ports:
      - 8081:8081
    volumes:
      - ./:/tutorial

  consumers-worker:
    image: nebulastream/nes-executable-image:latest
    entrypoint: "nesWorker --configPath=/tutorial/consumersWorker.yaml"
    depends_on:
      - coordinator
    volumes:
      - ./:/tutorial

  solarpanels-worker:
    image: nebulastream/nes-executable-image:latest
    entrypoint: "nesWorker --configPath=/tutorial/solarPanelsWorker.yaml"
    depends_on:
      - coordinator
    volumes:
      - ./:/tutorial

  windturbine-worker:
    image: "nebulastream/nes-executable-image:latest"
    entrypoint: "nesWorker --configPath=/tutorial/windTurbineWorker.yaml"
    depends_on:
      - coordinator
    volumes:
      - ./:/tutorial

  datatown:
    image: nebulastream/nes-smart-city-image:latest
    ports:
      - 9003:9003

  ui:
    image: nebulastream/nes-ui-image:latest
    ports:
      - 9000:9000

  mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1885:1885
      - 9001:9001
      - 9002:9002
    volumes:
      - ./mosquitto/config:/mosquitto/config

  # Grafana is used to visualize the input data and the result of the queries.
  # Access the dashboard: http://localhost:3000/
  # Note that the datasource has to be reconfigured, whenever the container is restarted.
  grafana:
    # Build a custom Grafana docker image to provision the MQTT datasource
    # and a dashboard to show the data generated by the tutorial code.
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
    # https://grafana.com/docs/grafana/latest/administration/provisioning/
    build: ./config/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      # Provide a docker volume to persist changes to the Grafana configuration.
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage: {}
